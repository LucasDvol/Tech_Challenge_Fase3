# importanto as bibliotecas

import pandas as pd
import glob
import os
pd.set_option('display.max_columns', None)

# Definindo arquivos
path = 'C:/Users/lucasoliveira/PycharmProjects/FIAP/DB/Tech_Challenge/Fase_3/Microdados'
all_files = glob.glob(os.path.join(path, '*.csv'))

# Criando DF
df = pd.concat((pd.read_csv(f) for f in all_files), ignore_index = True)
df['C01011'] = df['C01011'].apply(lambda x: f"{int(x):02d}" if pd.notna(x) else 'não aplicável')

# Renomeando colunas:
renomear_colunas = {
    "UF": "uf",
    "V1012": "semana_mes",
    "V1013": "mes",
    "V1022": "area_domicilio",
    "A002": "idade",
    "A003": "sexo",
    "A004": "cor_raca",
    "A005": "escolaridade",
    "B0011": "teve_febre",
    "B0014": "teve_dificuldade_respirar",
    "B0015": "teve_dor_cabeca",
    "B0019": "teve_fadiga",
    "B00111": "teve_perda_cheiro",
    "B002": "foi_posto_saude",
    "B0031": "ficou_em_casa",
    "B005": "ficou_internado",
    "B009B": "resultado_covid",
    "B007": "tem_plano_saude",
    "C007B": "assalariado",
    "C01011": "faixa_rendimento",
    "F001": "situacao_domicilio"
}

df = df.rename(columns=renomear_colunas)

# Removendo colunas não utilizadas
colunas_renomeadas = list(renomear_colunas.values())
df = df[colunas_renomeadas]

# Repositório de códigos:
# Nome da UF
unidade_federativa = {
    "11": "Rondônia",
    "12": "Acre",
    "13": "Amazonas",
    "14": "Roraima",
    "15": "Pará",
    "16": "Amapá",
    "17": "Tocantins",
    "21": "Maranhão",
    "22": "Piauí",
    "23": "Ceará",
    "24": "Rio Grande do Norte",
    "25": "Paraíba",
    "26": "Pernambuco",
    "27": "Alagoas",
    "28": "Sergipe",
    "29": "Bahia",
    "31": "Minas Gerais",
    "32": "Espírito Santo",
    "33": "Rio de Janeiro",
    "35": "São Paulo",
    "41": "Paraná",
    "42": "Santa Catarina",
    "43": "Rio Grande do Sul",
    "50": "Mato Grosso do Sul",
    "51": "Mato Grosso",
    "52": "Goiás",
    "53": "Distrito Federal"
}
df['uf'] = df['uf'].astype(str)
df['uf'] = df['uf'].replace(unidade_federativa)


# Escolaridade
escolaridade = {
        '1': 'Sem instrução',
        '2': 'Fundamental incompleto',
        '3': 'Fundamental completa',
        '4': 'Médio incompleto',
        '5': 'Médio completo',
        '6': 'Superior incompleto',
        '7': 'Superior completo',
        '8': 'Pós-graduação, mestrado ou doutorado',
    }
df['escolaridade'] = df['escolaridade'].astype(str)
df['escolaridade'] = df['escolaridade'].replace(escolaridade)


# area domicilio
area = {
    '1': 'Urbana',
    '2': 'Rural',
}
df['area_domicilio'] = df['area_domicilio'].astype(str)
df['area_domicilio'] = df['area_domicilio'].replace(area)

# sexo
sexo = {
    '1': 'Homem',
    '2': 'Mulher',
}
df['sexo'] = df['sexo'].astype(str)
df['sexo'] = df['sexo'].replace(sexo)

# cor-raça
cor_raca = {
    '1': 'Branca',
    '2': 'Preta',
    '3': 'Amarela',
    '4': 'Parda',
    '5': 'Indígena',
    '9': 'Ignorado',
}
df['cor_raca'] = df['cor_raca'].astype(str)
df['cor_raca'] = df['cor_raca'].replace(cor_raca)

# perguntas "sim/não"
sim_nao = {
    1: "Sim",
    2: "Não",
    3: "Não sabe",
    9: "Ignorado",
}
for coluna in ['teve_febre', 'teve_dor_cabeca','teve_dificuldade_respirar','teve_fadiga','teve_perda_cheiro','tem_plano_saude','foi_posto_saude','ficou_em_casa']:

    df[coluna] = pd.to_numeric(df[coluna],errors='coerce')  # Converte para numérico, tornando valores não numéricos em NaN
    df[coluna] = df[coluna].fillna('não aplicável')  # Substitui NaN por "não aplicável"
    df[coluna] = df[coluna].replace(sim_nao)

# Ficou internado
ficou_internado = {
    '1': 'Sim',
    '2': 'Não',
    '3': 'Não foi atendido',
    '9': 'Ignorado',
    }
df['ficou_internado'] = df['ficou_internado'].astype(str)
df['ficou_internado'] = df['ficou_internado'].replace(ficou_internado)

# Resultado covid
resultado_covid = {
    '1': 'Positivo',
    '2': 'Negativo',
    '3': 'Inconclusivo',
    '4': 'Ainda não recebeu o resultado',
    '9': 'Ignorado',
    }
df['resultado_covid'] = df['resultado_covid'].astype(str)
df['resultado_covid'] = df['resultado_covid'].replace(resultado_covid)


# Assalariado
assalariado = {
    '1': 'Sim, tem carteira de trabalho assinada',
    '2': 'Sim, é servidor público estatutário',
    '3': 'Não',
}
df['assalariado'] = df['assalariado'].astype(str)
df['assalariado'] = df['assalariado'].replace(assalariado)

# Faixa de rendimento
faixa = {
    '00': '0 - 100',
    '01': '101 - 300',
    '02': '301 - 600',
    '03': '601 - 800',
    '04': '801 - 1.600',
    '05': '1.601 - 3.000',
    '06': '3.001 - 10.000',
    '07': '10.001 - 50.000',
    '08': '50.001 - 100.000',
    '09': 'Mais de 100.000',
}
df['faixa_rendimento'] = df['faixa_rendimento'].astype(str)
df['faixa_rendimento'] = df['faixa_rendimento'].replace(faixa)


# Domicilio
domicilio = {
    '1': 'Próprio - já pago ',
    '2': 'Próprio - ainda pagando',
    '3': 'Alugado',
    '4': 'Cedido por empregador',
    '5': 'Cedido por familiar',
    '6': 'Cedido de outra forma',
    '7': 'Outra condição'
}
df['situacao_domicilio'] = df['situacao_domicilio'].astype(str)
df['situacao_domicilio'] = df['situacao_domicilio'].replace(domicilio)


print(df.head())
