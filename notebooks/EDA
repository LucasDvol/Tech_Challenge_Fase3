!pip install geodatasets
Collecting geodatasets
  Downloading geodatasets-2024.8.0-py3-none-any.whl.metadata (5.4 kB)
Requirement already satisfied: pooch in /usr/local/lib/python3.10/dist-packages (from geodatasets) (1.8.2)
Requirement already satisfied: platformdirs>=2.5.0 in /usr/local/lib/python3.10/dist-packages (from pooch->geodatasets) (4.3.6)
Requirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.10/dist-packages (from pooch->geodatasets) (24.1)
Requirement already satisfied: requests>=2.19.0 in /usr/local/lib/python3.10/dist-packages (from pooch->geodatasets) (2.32.3)
Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.10/dist-packages (from requests>=2.19.0->pooch->geodatasets) (3.3.2)
Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.10/dist-packages (from requests>=2.19.0->pooch->geodatasets) (3.10)
Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.10/dist-packages (from requests>=2.19.0->pooch->geodatasets) (2.2.3)
Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.10/dist-packages (from requests>=2.19.0->pooch->geodatasets) (2024.8.30)
Downloading geodatasets-2024.8.0-py3-none-any.whl (20 kB)
Installing collected packages: geodatasets
Successfully installed geodatasets-2024.8.0

[3]
!pip freeze > ..//requirements.txt
[8]
from _spark import *
from transformations import transform

import pyspark.sql.functions as f
import pyspark.sql.types as t
import os
import findspark
findspark.init()

spark = get_spark()

gcs_bucket =  'tech_challengefase-3'
[11]

!pip install pandas-gbq --upgrade
!pip install google-cloud-bigquery --upgrade
Requirement already satisfied: pandas-gbq in /usr/local/lib/python3.10/dist-packages (0.23.2)
Requirement already satisfied: setuptools in /usr/local/lib/python3.10/dist-packages (from pandas-gbq) (71.0.4)
Requirement already satisfied: db-dtypes<2.0.0,>=1.0.4 in /usr/local/lib/python3.10/dist-packages (from pandas-gbq) (1.3.0)
Requirement already satisfied: numpy>=1.18.1 in /usr/local/lib/python3.10/dist-packages (from pandas-gbq) (1.26.4)
Requirement already satisfied: pandas>=1.1.4 in /usr/local/lib/python3.10/dist-packages (from pandas-gbq) (2.2.2)
Requirement already satisfied: pyarrow>=3.0.0 in /usr/local/lib/python3.10/dist-packages (from pandas-gbq) (16.1.0)
Requirement already satisfied: pydata-google-auth>=1.5.0 in /usr/local/lib/python3.10/dist-packages (from pandas-gbq) (1.8.2)
Requirement already satisfied: google-api-core<3.0.0dev,>=2.10.2 in /usr/local/lib/python3.10/dist-packages (from pandas-gbq) (2.19.2)
Requirement already satisfied: google-auth>=2.13.0 in /usr/local/lib/python3.10/dist-packages (from pandas-gbq) (2.27.0)
Requirement already satisfied: google-auth-oauthlib>=0.7.0 in /usr/local/lib/python3.10/dist-packages (from pandas-gbq) (1.2.1)
Requirement already satisfied: google-cloud-bigquery<4.0.0dev,>=3.4.2 in /usr/local/lib/python3.10/dist-packages (from pandas-gbq) (3.25.0)
Requirement already satisfied: packaging>=22.0.0 in /usr/local/lib/python3.10/dist-packages (from pandas-gbq) (24.1)
Requirement already satisfied: googleapis-common-protos<2.0.dev0,>=1.56.2 in /usr/local/lib/python3.10/dist-packages (from google-api-core<3.0.0dev,>=2.10.2->pandas-gbq) (1.65.0)
Requirement already satisfied: protobuf!=3.20.0,!=3.20.1,!=4.21.0,!=4.21.1,!=4.21.2,!=4.21.3,!=4.21.4,!=4.21.5,<6.0.0.dev0,>=3.19.5 in /usr/local/lib/python3.10/dist-packages (from google-api-core<3.0.0dev,>=2.10.2->pandas-gbq) (3.20.3)
Requirement already satisfied: proto-plus<2.0.0dev,>=1.22.3 in /usr/local/lib/python3.10/dist-packages (from google-api-core<3.0.0dev,>=2.10.2->pandas-gbq) (1.24.0)
Requirement already satisfied: requests<3.0.0.dev0,>=2.18.0 in /usr/local/lib/python3.10/dist-packages (from google-api-core<3.0.0dev,>=2.10.2->pandas-gbq) (2.32.3)
Requirement already satisfied: cachetools<6.0,>=2.0.0 in /usr/local/lib/python3.10/dist-packages (from google-auth>=2.13.0->pandas-gbq) (5.5.0)
Requirement already satisfied: pyasn1-modules>=0.2.1 in /usr/local/lib/python3.10/dist-packages (from google-auth>=2.13.0->pandas-gbq) (0.4.1)
Requirement already satisfied: rsa<5,>=3.1.4 in /usr/local/lib/python3.10/dist-packages (from google-auth>=2.13.0->pandas-gbq) (4.9)
Requirement already satisfied: requests-oauthlib>=0.7.0 in /usr/local/lib/python3.10/dist-packages (from google-auth-oauthlib>=0.7.0->pandas-gbq) (1.3.1)
Requirement already satisfied: google-cloud-core<3.0.0dev,>=1.6.0 in /usr/local/lib/python3.10/dist-packages (from google-cloud-bigquery<4.0.0dev,>=3.4.2->pandas-gbq) (2.4.1)
Requirement already satisfied: google-resumable-media<3.0dev,>=0.6.0 in /usr/local/lib/python3.10/dist-packages (from google-cloud-bigquery<4.0.0dev,>=3.4.2->pandas-gbq) (2.7.2)
Requirement already satisfied: python-dateutil<3.0dev,>=2.7.2 in /usr/local/lib/python3.10/dist-packages (from google-cloud-bigquery<4.0.0dev,>=3.4.2->pandas-gbq) (2.8.2)
Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.10/dist-packages (from pandas>=1.1.4->pandas-gbq) (2024.2)
Requirement already satisfied: tzdata>=2022.7 in /usr/local/lib/python3.10/dist-packages (from pandas>=1.1.4->pandas-gbq) (2024.2)
Requirement already satisfied: grpcio<2.0dev,>=1.33.2 in /usr/local/lib/python3.10/dist-packages (from google-api-core[grpc]!=2.0.*,!=2.1.*,!=2.10.*,!=2.2.*,!=2.3.*,!=2.4.*,!=2.5.*,!=2.6.*,!=2.7.*,!=2.8.*,!=2.9.*,<3.0.0dev,>=1.34.1->google-cloud-bigquery<4.0.0dev,>=3.4.2->pandas-gbq) (1.64.1)
Requirement already satisfied: grpcio-status<2.0.dev0,>=1.33.2 in /usr/local/lib/python3.10/dist-packages (from google-api-core[grpc]!=2.0.*,!=2.1.*,!=2.10.*,!=2.2.*,!=2.3.*,!=2.4.*,!=2.5.*,!=2.6.*,!=2.7.*,!=2.8.*,!=2.9.*,<3.0.0dev,>=1.34.1->google-cloud-bigquery<4.0.0dev,>=3.4.2->pandas-gbq) (1.48.2)
Requirement already satisfied: google-crc32c<2.0dev,>=1.0 in /usr/local/lib/python3.10/dist-packages (from google-resumable-media<3.0dev,>=0.6.0->google-cloud-bigquery<4.0.0dev,>=3.4.2->pandas-gbq) (1.6.0)
Requirement already satisfied: pyasn1<0.7.0,>=0.4.6 in /usr/local/lib/python3.10/dist-packages (from pyasn1-modules>=0.2.1->google-auth>=2.13.0->pandas-gbq) (0.6.1)
Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.10/dist-packages (from python-dateutil<3.0dev,>=2.7.2->google-cloud-bigquery<4.0.0dev,>=3.4.2->pandas-gbq) (1.16.0)
Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.10/dist-packages (from requests<3.0.0.dev0,>=2.18.0->google-api-core<3.0.0dev,>=2.10.2->pandas-gbq) (3.3.2)
Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.10/dist-packages (from requests<3.0.0.dev0,>=2.18.0->google-api-core<3.0.0dev,>=2.10.2->pandas-gbq) (3.10)
Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.10/dist-packages (from requests<3.0.0.dev0,>=2.18.0->google-api-core<3.0.0dev,>=2.10.2->pandas-gbq) (2.2.3)
Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.10/dist-packages (from requests<3.0.0.dev0,>=2.18.0->google-api-core<3.0.0dev,>=2.10.2->pandas-gbq) (2024.8.30)
Requirement already satisfied: oauthlib>=3.0.0 in /usr/local/lib/python3.10/dist-packages (from requests-oauthlib>=0.7.0->google-auth-oauthlib>=0.7.0->pandas-gbq) (3.2.2)
Requirement already satisfied: google-cloud-bigquery in /usr/local/lib/python3.10/dist-packages (3.25.0)
Collecting google-cloud-bigquery
  Downloading google_cloud_bigquery-3.26.0-py2.py3-none-any.whl.metadata (8.7 kB)
Requirement already satisfied: google-api-core<3.0.0dev,>=2.11.1 in /usr/local/lib/python3.10/dist-packages (from google-api-core[grpc]<3.0.0dev,>=2.11.1->google-cloud-bigquery) (2.19.2)
Requirement already satisfied: google-auth<3.0.0dev,>=2.14.1 in /usr/local/lib/python3.10/dist-packages (from google-cloud-bigquery) (2.27.0)
Requirement already satisfied: google-cloud-core<3.0.0dev,>=2.4.1 in /usr/local/lib/python3.10/dist-packages (from google-cloud-bigquery) (2.4.1)
Requirement already satisfied: google-resumable-media<3.0dev,>=2.0.0 in /usr/local/lib/python3.10/dist-packages (from google-cloud-bigquery) (2.7.2)
Requirement already satisfied: packaging>=20.0.0 in /usr/local/lib/python3.10/dist-packages (from google-cloud-bigquery) (24.1)
Requirement already satisfied: python-dateutil<3.0dev,>=2.7.3 in /usr/local/lib/python3.10/dist-packages (from google-cloud-bigquery) (2.8.2)
Requirement already satisfied: requests<3.0.0dev,>=2.21.0 in /usr/local/lib/python3.10/dist-packages (from google-cloud-bigquery) (2.32.3)
Requirement already satisfied: googleapis-common-protos<2.0.dev0,>=1.56.2 in /usr/local/lib/python3.10/dist-packages (from google-api-core<3.0.0dev,>=2.11.1->google-api-core[grpc]<3.0.0dev,>=2.11.1->google-cloud-bigquery) (1.65.0)
Requirement already satisfied: protobuf!=3.20.0,!=3.20.1,!=4.21.0,!=4.21.1,!=4.21.2,!=4.21.3,!=4.21.4,!=4.21.5,<6.0.0.dev0,>=3.19.5 in /usr/local/lib/python3.10/dist-packages (from google-api-core<3.0.0dev,>=2.11.1->google-api-core[grpc]<3.0.0dev,>=2.11.1->google-cloud-bigquery) (3.20.3)
Requirement already satisfied: proto-plus<2.0.0dev,>=1.22.3 in /usr/local/lib/python3.10/dist-packages (from google-api-core<3.0.0dev,>=2.11.1->google-api-core[grpc]<3.0.0dev,>=2.11.1->google-cloud-bigquery) (1.24.0)
Requirement already satisfied: grpcio<2.0dev,>=1.33.2 in /usr/local/lib/python3.10/dist-packages (from google-api-core[grpc]<3.0.0dev,>=2.11.1->google-cloud-bigquery) (1.64.1)
Requirement already satisfied: grpcio-status<2.0.dev0,>=1.33.2 in /usr/local/lib/python3.10/dist-packages (from google-api-core[grpc]<3.0.0dev,>=2.11.1->google-cloud-bigquery) (1.48.2)
Requirement already satisfied: cachetools<6.0,>=2.0.0 in /usr/local/lib/python3.10/dist-packages (from google-auth<3.0.0dev,>=2.14.1->google-cloud-bigquery) (5.5.0)
Requirement already satisfied: pyasn1-modules>=0.2.1 in /usr/local/lib/python3.10/dist-packages (from google-auth<3.0.0dev,>=2.14.1->google-cloud-bigquery) (0.4.1)
Requirement already satisfied: rsa<5,>=3.1.4 in /usr/local/lib/python3.10/dist-packages (from google-auth<3.0.0dev,>=2.14.1->google-cloud-bigquery) (4.9)
Requirement already satisfied: google-crc32c<2.0dev,>=1.0 in /usr/local/lib/python3.10/dist-packages (from google-resumable-media<3.0dev,>=2.0.0->google-cloud-bigquery) (1.6.0)
Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.10/dist-packages (from python-dateutil<3.0dev,>=2.7.3->google-cloud-bigquery) (1.16.0)
Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.10/dist-packages (from requests<3.0.0dev,>=2.21.0->google-cloud-bigquery) (3.3.2)
Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.10/dist-packages (from requests<3.0.0dev,>=2.21.0->google-cloud-bigquery) (3.10)
Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.10/dist-packages (from requests<3.0.0dev,>=2.21.0->google-cloud-bigquery) (2.2.3)
Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.10/dist-packages (from requests<3.0.0dev,>=2.21.0->google-cloud-bigquery) (2024.8.30)
Requirement already satisfied: pyasn1<0.7.0,>=0.4.6 in /usr/local/lib/python3.10/dist-packages (from pyasn1-modules>=0.2.1->google-auth<3.0.0dev,>=2.14.1->google-cloud-bigquery) (0.6.1)
Downloading google_cloud_bigquery-3.26.0-py2.py3-none-any.whl (239 kB)
2K   ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 239.1/239.1 kB 4.3 MB/s eta 0:00:00
?25hInstalling collected packages: google-cloud-bigquery
  Attempting uninstall: google-cloud-bigquery
    Found existing installation: google-cloud-bigquery 3.25.0
    Uninstalling google-cloud-bigquery-3.25.0:
      Successfully uninstalled google-cloud-bigquery-3.25.0
Successfully installed google-cloud-bigquery-3.26.0

[1]
from google.colab import auth
auth.authenticate_user()
[2]
import pandas as pd
from google.cloud import bigquery
from google.oauth2 import service_account
[3]
project_id = "fase3-437322"
query = """
select *
from fase3-437322.Fase3dataset.microdados_consolidado
"""
df = pd.read_gbq(query, project_id=project_id, dialect='standard')
[8]
df.head()

[10]
# Renomeando colunas:
renomear_colunas = {
    "UF": "uf",
    "V1012": "semana_mes",
    "V1013": "mes",
    "V1022": "area_domicilio",
    "A002": "idade",
    "A003": "sexo",
    "A004": "cor_raca",
    "A005": "escolaridade",
    "B0011": "teve_febre",
    "B0014": "teve_dificuldade_respirar",
    "B0015": "teve_dor_cabeca",
    "B0019": "teve_fadiga",
    "B00111": "teve_perda_cheiro",
    "B002": "foi_posto_saude",
    "B0031": "ficou_em_casa",
    "B005": "ficou_internado",
    "B009B": "resultado_covid",
    "B007": "tem_plano_saude",
    "C007B": "assalariado",
    "C01011": "faixa_rendimento",
    "F001": "situacao_domicilio"
}

df = df.rename(columns=renomear_colunas)
[11]

# Repositório de códigos:
# Nome da UF
unidade_federativa = {
    "11": "Rondônia",
    "12": "Acre",
    "13": "Amazonas",
    "14": "Roraima",
    "15": "Pará",
    "16": "Amapá",
    "17": "Tocantins",
    "21": "Maranhão",
    "22": "Piauí",
    "23": "Ceará",
    "24": "Rio Grande do Norte",
    "25": "Paraíba",
    "26": "Pernambuco",
    "27": "Alagoas",
    "28": "Sergipe",
    "29": "Bahia",
    "31": "Minas Gerais",
    "32": "Espírito Santo",
    "33": "Rio de Janeiro",
    "35": "São Paulo",
    "41": "Paraná",
    "42": "Santa Catarina",
    "43": "Rio Grande do Sul",
    "50": "Mato Grosso do Sul",
    "51": "Mato Grosso",
    "52": "Goiás",
    "53": "Distrito Federal"
}
df['uf'] = df['uf'].astype(str)
df['uf'] = df['uf'].replace(unidade_federativa)
[12]
# Escolaridade
escolaridade = {
        '1': 'Sem instrução',
        '2': 'Fundamental incompleto',
        '3': 'Fundamental completa',
        '4': 'Médio incompleto',
        '5': 'Médio completo',
        '6': 'Superior incompleto',
        '7': 'Superior completo',
        '8': 'Pós-graduação, mestrado ou doutorado',
    }
df['escolaridade'] = df['escolaridade'].astype(str)
df['escolaridade'] = df['escolaridade'].replace(escolaridade)
[13]
# area domicilio
area = {
    '1': 'Urbana',
    '2': 'Rural',
}
df['area_domicilio'] = df['area_domicilio'].astype(str)
df['area_domicilio'] = df['area_domicilio'].replace(area)
[14]

# sexo
sexo = {
    '1': 'Homem',
    '2': 'Mulher',
}
df['sexo'] = df['sexo'].astype(str)
df['sexo'] = df['sexo'].replace(sexo)
[15]

# cor-raça
cor_raca = {
    '1': 'Branca',
    '2': 'Preta',
    '3': 'Amarela',
    '4': 'Parda',
    '5': 'Indígena',
    '9': 'Ignorado',
}
df['cor_raca'] = df['cor_raca'].astype(str)
df['cor_raca'] = df['cor_raca'].replace(cor_raca)
[18]
# perguntas "sim/não"
sim_nao = {
    1: "Sim",
    2: "Não",
    3: "Não sabe",
    9: "Ignorado",
}
for coluna in ['teve_febre', 'teve_dor_cabeca','teve_dificuldade_respirar','teve_fadiga','teve_perda_cheiro','tem_plano_saude','foi_posto_saude','ficou_em_casa']:
    # Change the data type of the column to 'object' (string) before converting to numeric
    df[coluna] = df[coluna].astype(object)
    df[coluna] = pd.to_numeric(df[coluna], errors='coerce')  # Converte para numérico, tornando valores não numéricos em NaN
    df[coluna] = df[coluna].fillna('não aplicável')  # Substitui NaN por "não aplicável"

    # Now it's safe to replace with the dictionary
    df[coluna] = df[coluna].replace(sim_nao)
[19]

# Ficou internado
ficou_internado = {
    '1': 'Sim',
    '2': 'Não',
    '3': 'Não foi atendido',
    '9': 'Ignorado',
    }
df['ficou_internado'] = df['ficou_internado'].astype(str)
df['ficou_internado'] = df['ficou_internado'].replace(ficou_internado)
[20]

# Resultado covid
resultado_covid = {
    '1': 'Positivo',
    '2': 'Negativo',
    '3': 'Inconclusivo',
    '4': 'Ainda não recebeu o resultado',
    '9': 'Ignorado',
    }
df['resultado_covid'] = df['resultado_covid'].astype(str)
df['resultado_covid'] = df['resultado_covid'].replace(resultado_covid)

[21]
# Assalariado
assalariado = {
    '1': 'Sim, tem carteira de trabalho assinada',
    '2': 'Sim, é servidor público estatutário',
    '3': 'Não',
}
df['assalariado'] = df['assalariado'].astype(str)
df['assalariado'] = df['assalariado'].replace(assalariado)
[22]

# Faixa de rendimento
faixa = {
    '00': '0 - 100',
    '01': '101 - 300',
    '02': '301 - 600',
    '03': '601 - 800',
    '04': '801 - 1.600',
    '05': '1.601 - 3.000',
    '06': '3.001 - 10.000',
    '07': '10.001 - 50.000',
    '08': '50.001 - 100.000',
    '09': 'Mais de 100.000',
}
df['faixa_rendimento'] = df['faixa_rendimento'].astype(str)
df['faixa_rendimento'] = df['faixa_rendimento'].replace(faixa)
[23]
# Domicilio
domicilio = {
    '1': 'Próprio - já pago ',
    '2': 'Próprio - ainda pagando',
    '3': 'Alugado',
    '4': 'Cedido por empregador',
    '5': 'Cedido por familiar',
    '6': 'Cedido de outra forma',
    '7': 'Outra condição'
}
df['situacao_domicilio'] = df['situacao_domicilio'].astype(str)
df['situacao_domicilio'] = df['situacao_domicilio'].replace(domicilio)


print(df.head())
        uf  semana_mes  mes area_domicilio  idade    sexo cor_raca  \
0  Roraima           1    9         Urbana      1  Mulher    Parda   
1     Pará           1    9         Urbana      4  Mulher    Parda   
2    Ceará           1    9          Rural      4  Mulher    Parda   
3    Ceará           1    9         Urbana      2  Mulher   Branca   
4    Bahia           1    9         Urbana      5  Mulher    Parda   

    escolaridade     teve_febre teve_dificuldade_respirar  ...    teve_fadiga  \
0  Sem instrução  não aplicável             não aplicável  ...  não aplicável   
1  Sem instrução  não aplicável             não aplicável  ...  não aplicável   
2  Sem instrução  não aplicável             não aplicável  ...  não aplicável   
3  Sem instrução  não aplicável             não aplicável  ...  não aplicável   
4  Sem instrução  não aplicável             não aplicável  ...  não aplicável   

  teve_perda_cheiro foi_posto_saude  ficou_em_casa ficou_internado  \
0     não aplicável   não aplicável  não aplicável            <NA>   
1     não aplicável   não aplicável  não aplicável            <NA>   
2     não aplicável   não aplicável  não aplicável            <NA>   
3     não aplicável   não aplicável  não aplicável            <NA>   
4     não aplicável   não aplicável  não aplicável            <NA>   

  resultado_covid tem_plano_saude assalariado faixa_rendimento  \
0            <NA>   não aplicável        <NA>             <NA>   
1            <NA>   não aplicável        <NA>             <NA>   
2            <NA>   não aplicável        <NA>             <NA>   
3            <NA>   não aplicável        <NA>             <NA>   
4            <NA>   não aplicável        <NA>             <NA>   

      situacao_domicilio  
0     Próprio - já pago   
1     Próprio - já pago   
2  Cedido por empregador  
3     Próprio - já pago   
4                Alugado  

[5 rows x 21 columns]

[28]
df.to_csv('output.csv', index=False)

from google.colab import files
files.download('output.csv')
<IPython.core.display.Javascript object>
<IPython.core.display.Javascript object>
